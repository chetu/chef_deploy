# db migrations options
deploy_dir = node['deploy']['deploy_dir']
deploy_init = node['deploy']['deploy_init']
deploy_style = node['deploy']['deploy_style']
repository = node['deploy']['repository']
repository_branch = node['deploy']['repository_branch']


node[:apps].each do |app|

if deploy_init == "True"
  cap_directories = [
    "#{deploy_dir}/#{app}/shared",
    "#{deploy_dir}/#{app}/shared/config",
    "#{deploy_dir}/#{app}/shared/config/log",
    "#{deploy_dir}/#{app}/shared/system",
    "#{deploy_dir}/#{app}/releases"
  ]
  
  cap_directories.each do |dir|
    directory dir do
      owner node[:user]
      mode 0755
      recursive true
    end
  end
end

if deploy_style != "update"  

 git "#{deploy_dir}/#{app}/releases/#{Time.now.strftime("%Y%m%d%H%M")}" do
  repository "#{repository}"
  revision "#{repository_branch}"
  reference "HEAD"
  action :sync
 end	

 link "#{deploy_dir}/#{app}/current" do
  to "#{deploy_dir}/#{app}/releases/#{Time.now.strftime("%Y%m%d%H%M")}"
 end
 directory "#{deploy_dir}/#{app}/current/log" do
    recursive true
    action :delete
 end

 link "#{deploy_dir}/#{app}/current/log" do
  to "#{deploy_dir}/#{app}/shared/config/log"
 end

 directory "#{deploy_dir}/#{app}/current/tmp" do
    recursive true
    action :create
end

 execute "bundle" do
  cwd "#{deploy_dir}/#{app}/current"
  command "bundle install "
  action :run
 end


end 

if deploy_style == "update"
 git "#{deploy_dir}/#{app}/current" do
  repository "#{repository}"
  revision "#{repository_branch}"
  reference "HEAD"
  action :checkout
 end
end

 execute "bundle" do
  cwd "#{deploy_dir}/#{app}/current"	
  command "bundle install "
  action :run
 end


 execute "service_restart" do
  command "touch #{deploy_dir}/#{app}/current/tmp/restart.txt"
  action :run
  end
end
